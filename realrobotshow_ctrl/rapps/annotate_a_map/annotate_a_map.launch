<!--
  Right now, the android app is hard coded to look for /cmd_vel as the input
  topic.
 -->
<launch>
  <!-- Maps -->
  <arg name="map_file" default="$(find realrobotshow_ctrl)/resources/show_map.yaml" /> <!-- map file show match with make_a_map param -->
  <arg name="annotation_file" default="$(find realrobotshow_ctrl)/resources/show_annotation.yaml"/>
  <arg name="annotation_namespace" default="/annotation"/>

  <!-- Publish a dummy tf, as map viewer on Android app needs a tf reference
relative to which show the map on screnn (logically we use /map) -->
  <node pkg="tf" type="static_transform_publisher" name="dummy_map_tf_broadcaster" args="0 0 0 0 0 0 map dummy_tf 10" />

  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!-- *********************** Annotations ************************ -->
  <node pkg="simple_annotation_server" type="simple_server.py" name="annotations_manager">
    <param name="filename" value="$(arg annotation_file)"/>
    <remap from="ar_markers" to="$(arg annotation_namespace)/ar_markers"/>
    <remap from="tables" to="$(arg annotation_namespace)/tables"/>
    <remap from="walls" to="$(arg annotation_namespace)/walls"/>
    <remap from="columns" to="$(arg annotation_namespace)/columns"/>

    <remap from="save_columns" to="$(arg annotation_namespace)/save_columns"/>
    <remap from="save_tables" to="$(arg annotation_namespace)/save_tables"/>
    <remap from="save_walls" to="$(arg annotation_namespace)/save_walls"/>
    <remap from="save_ar_markers" to="$(arg annotation_namespace)/save_ar_markers"/>
  </node>
</launch>
