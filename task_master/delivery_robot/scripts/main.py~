#!/usr/bin/env python
import rospy
import threading
import random
import time

##ros msg
from order_msgs.msg import Order
from std_msgs.msg import Int32

global pub
def executeDeliveruSrv(robot_name,data):
	global robot_list;
	print data.user_id, data.table_id, data.robot_id, data.status
	robot_list[robot_name]["status"] = "Delivery"
	robot_list[robot_name]["order"] = data
	
	delivery_timeout = random.randrange(0,30)+30
	i = 0
	while i< delivery_timeout:
			i+=1
			rospy.sleep(1)
			print "[%s]"%robot_name, "Delivery %d/%d"%(i,delivery_timeout)	
	## arrive	
	robot_list[robot_name]["order"].status = "Arrive"
	robot_list[robot_name]["pub"].publish(robot_list[robot_name]["order"])
	
	robot_list[robot_name]["status"] = "WaitingCompletion"
	robot_list[robot_name]["order"].status = "WaitingCompletion"
	
	while robot_list[robot_name]["status"] != "Completion":
		print "[%s]"%robot_name, "Waitting user"
		time.sleep(1)
		pass
	
		
def Recv(data):
	
	if data._connection_header['topic'] == '/delivery_robot_init_pub':
		pass
		#global robot_num
		#robot_num = data.data
	
	elif data._connection_header['topic'].count("_pub") != 0:
		
		robot_name = "robot_"+data._connection_header['topic'].split('_')[3]
		print robot_name, type(robot_name)
		if data.status == "Delivery":
			#todo
			#make threading function about robot delivery service			
			Threadfunc = threading.Thread(target=executeDeliveruSrv, args=(robot_name,data))
			Threadfunc.start()
		else:
			pass
	else:
		pass
		
	
	
if __name__ == '__main__':
    
	try:
		global robot_num
		robot_num = 5
		
		rospy.init_node('delivery_robot')
		rospy.Subscriber("delivery_robot_init_pub",Int32,Recv)
		
		#while robot_num == 0:
		#	pass

		global robot_list; robot_list = {}
		
		
		for k in range(robot_num):
			robot_name = "robot_"+str(k+1)
			robot_list[robot_name]="Idle" 
		
		for k in range(robot_num):
			robot_name = "robot_"+str(k+1)
			
			robot_pub_topic = "delivery_"+robot_name+"+order_sub"
			robot_list[robot_name]=dict(state = "Idle", pub=rospy.Publisher(robot_pub_topic, Order))

			robot_sub_topic = "delivery_order_"+robot_name+"_pub"
			rospy.Subscriber(robot_sub_topic,Order, Recv)
		
		
		while not rospy.is_shutdown():
			pass
	
	except rospy.ROSInterruptException:
		pass
